apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver

spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: gcr.io/google_containers/hyperkube:v__K8S_VERSION__
    command:
    - /hyperkube
    - apiserver
    - --bind-address=0.0.0.0
    - --etcd_servers=__ETCD_ENDPOINTS__
    - --allow-privileged=true
    - --service-cluster-ip-range=__SERVICE_IP_RANGE__
    - --secure_port=443
    - --advertise-address=__PUBLIC_IP__
    - --admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota
    - --tls-cert-file=__KUBERNETES_SSL_PATH__/__APISERVER_PEM_NAME__
    - --tls-private-key-file=__KUBERNETES_SSL_PATH__/__APISERVER_KEY_PEM_NAME__
    - --client-ca-file=__KUBERNETES_SSL_PATH__/__CA_PEM_NAME__
    - --service-account-key-file=__KUBERNETES_SSL_PATH__/__APISERVER_KEY_PEM_NAME__
    - --cloud-provider=
    ports:
    - containerPort: 443
      hostPort: 443
      name: https
    - containerPort: 7080
      hostPort: 7080
      name: http
    - containerPort: 8080
      hostPort: 8080
      name: local
    volumeMounts:
    - mountPath: __KUBERNETES_SSL_PATH__
      name: ssl-certs-kubernetes
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
  volumes:
  - hostPath:
      path: __KUBERNETES_SSL_PATH__
    name: ssl-certs-kubernetes
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-host
